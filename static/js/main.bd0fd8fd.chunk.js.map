{"version":3,"sources":["store/reducers/ui.js","store/reducers/data.js","store/configureStore.js","store/actions/actions.js","constants/routes.js","constants/api.js","components/Grid/Grid.js","screens/Explore/Explore.js","store/actions/ui.js","store/actions/data.js","screens/PDF/PDF.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isLoading","initialColors","selectedColors","randomColors","rootReducer","combineReducers","ui","state","arguments","length","undefined","action","type","Object","assign","defineProperty","key","value","data","configureStore","createStore","applyMiddleware","reduxThunk","ROUTES","AUTH","HOME","PROJECT_HOME","ENDPOINTS","BASE","Grid","props","react_default","a","createElement","style","gridContainerStyle","children","ExploreScreen","fetchDataHandler","fetch","then","response","json","responseJson","Promise","resolve","localStorage","setItem","JSON","stringify","colors","_this","onSetData","checkStorage","storage","getItem","randoms","parse","randoms_func","onSetKey","itemSelectedHandler","hex","color","find","item","selections","filter","concat","keyPressHandler","event","keyCode","randomNum","max","Math","floor","random","push","_this2","this","document","addEventListener","_this3","className","zIndex","position","top","left","right","backgroundColor","react_router_dom","to","scheme","forEach","slice","getColorScheme","target","components_Grid_Grid","maxWidth","height","map","index","width","padding","onClick","borderRadius","index_esm","size","paddingBottom","textAlign","fontFamily","fontSize","name","Component","connect","dispatch","setKey","setData","PDFScreen","react_pdf_browser_es","orientation","flexGrow","flexDirection","randomsWithHashTag","match","params","split","storedSchemeObjsList","schemeObjsPDFList","schemeObj","obj","rebuild_sheme_from_storage","flex","justifyContent","NavBar","href","AppLayout","navBar","React","AppRoute","_ref","component","routeProps","objectWithoutProperties","react_router","render","App_AppLayout","App","appProps","App_AppRoute","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","ReactDOM","es","src_App","getElementById","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bd0fd8fd.chunk.js","sourcesContent":["import { \n\tSET_KEY \n} from '../actions/actions';\n\nconst initialState = {\n\tisLoading:true\n}\n\nexport const uiReducer = (state=initialState, action) => {\n\tswitch(action.type){\n\t\tcase SET_KEY:\n\t\t\treturn Object.assign({}, state, {[action.key]:action.value});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import {\n\tSET_DATA\n} from '../actions/actions';\n\nconst initialState = {\n\tinitialColors:[],\n\tselectedColors:[],\n\trandomColors:[]\n}\n\nexport const dataReducer = (state=initialState, action) => {\n\tswitch(action.type){\n\t\tcase SET_DATA:\n\t\t\treturn Object.assign({}, state, {[action.key]:action.value});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { uiReducer, dataReducer } from './reducers/index';\n\nconst rootReducer = combineReducers({\n\tui:uiReducer,\n\tdata:dataReducer\n});\n\nconst configureStore = () => {\n\treturn createStore(rootReducer, {}, applyMiddleware(reduxThunk))\n}\n\nexport default configureStore;","export const SET_KEY = 'SET_KEY';\nexport const SET_DATA = 'SET_DATA';","const ROUTES = {\n\tAUTH:\"/auth\",\n\tHOME:\"/\",\n\tPROJECT_HOME:\"/color-palette-project\"\n}\n\nexport default ROUTES;","const BASE = 'https://api.color.pizza/v1/';\n\nconst ENDPOINTS = {\n\tBASE:BASE\n}\n\nexport default ENDPOINTS;","import React from 'react';\n\nconst Grid = props => {\n\treturn(\n\t\t<figure style={props.gridContainerStyle}>\n\t\t\t<figcaption>\n\t\t\t\t{props.children}\n\t\t\t</figcaption>\n\t\t</figure>\n\t)\n}\n\nexport default Grid;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n\tsetKey,\n\tsetData\n} from '../../store/actions/index';\nimport ENDPOINTS from '../../constants/api';\n\nimport Grid from '../../components/Grid/Grid';\nimport { IoIosCheckmarkCircleOutline } from 'react-icons/io';\n\nclass ExploreScreen extends Component {\n\tcomponentDidMount(){\n\t\tPromise.resolve(this.checkStorage(ENDPOINTS.BASE))\n\t\t.then(() => {\n\t\t\tdocument.addEventListener(\"keypress\", this.keyPressHandler)\n\t\t})\n\n\t}\n\n\tfetchDataHandler = key => {\n\t\treturn fetch(key)\n\t\t.then(response => response.json())\n\t\t.then(responseJson => {\n\t\t\tPromise.resolve(localStorage.setItem(key, JSON.stringify(responseJson.colors)))\n\t\t\t.then(() => this.props.onSetData(\"initialColors\", responseJson.colors))\n\t\t})\n\t};\n\n\tcheckStorage = key => {\n\n\t\tlet storage = localStorage.getItem(key)\n\t\tlet randoms =[]\n\n\t\tif(storage !== null){\n\t\t\tstorage = this.props.onSetData(\"initialColors\", JSON.parse(storage))\n\t\t}else{\n\t\t\tstorage = this.fetchDataHandler(key)\n\t\t}\n\t\t\n\t\tPromise.resolve(storage)\n\t\t.then(() => {\n\t\t\trandoms = this.randoms_func()\n\t\t\tPromise.resolve(this.props.onSetData(\"randomColors\", randoms))\n\n\t\t})\n\t\t.then(() => this.props.onSetKey(\"isLoading\", false))\n\t};\n\n\titemSelectedHandler = hex => {\n\t\tlet color = this.props.selectedColors.find(item => {\n\t\t\treturn item.hex === hex\n\t\t})\n\n\t\tlet selections = this.props.selectedColors\n\n\t\tif(color !== undefined){\n\t\t\t//remove color from selected colors list\n\t\t\tselections = selections.filter(item => {\n\t\t\t\treturn item.hex !== hex\n\t\t\t})\n\t\t}else{\n\t\t\tlet color = this.props.initialColors.find(item => {\n\t\t\t\treturn item.hex === hex\n\t\t\t})\n\n\t\t\tselections = selections.concat(color)\n\t\t}\n\n\t\tPromise.resolve(this.props.onSetData(\"selectedColors\", selections))\n\t};\n\n\tkeyPressHandler = event => {\n\t\t// :: space key code, 32\n\t\tlet randoms = []\n\t\tif(event.keyCode === 32){\n\t\t\trandoms = this.randoms_func()\n\t\t\tPromise.resolve(this.props.onSetData(\"randomColors\", randoms))\n\t\t}\n\t};\n\n\trandoms_func = () => {\n\t\tlet check = {}\n\t\tlet randomNum = 0\n\t\tlet randoms = []\n\t\tlet max = this.props.initialColors.length\n\n\t\tlet checkRandoms = list => {\n\t\t\tcheck = list.find(item => {\n\t\t\t\treturn item.hex === this.props.initialColors[randomNum].hex\n\t\t\t})\n\n\t\t\treturn check\n\t\t}\n\n\t\twhile(randoms.length < 5 ){\n\t\t\trandomNum = Math.floor(Math.random() * (+max - + 0)) + + 0\n\t\t\tcheck = checkRandoms(randoms)\n\t\t\tif(check === undefined){\n\t\t\t\trandoms.push(this.props.initialColors[randomNum])\n\t\t\t}\n\t\t}\n\n\t\treturn randoms\n\t}\n\n\trender(){\n\t\tlet colorSelected = key => {\n\t\t\tlet color = this.props.selectedColors.find(item => {\n\t\t\t\treturn item.hex === key\n\t\t\t})\n\n\t\t\treturn color\n\t\t}\n\t\tlet getColorScheme = () => {\n\t\t\tlet randoms = this.props.randomColors\n\t\t\tlet scheme = []\n\t\t\trandoms.forEach(random => {\n\t\t\t\tscheme.push(random.hex.slice(1))\n\t\t\t})\n\n\t\t\treturn scheme\n\t\t}\n\t\tif(this.props.isLoading){\n\t\t\treturn(\n\t\t\t\t<div className=\"flex-column align-items-center\">\n\t\t\t\t<h1>loading ...</h1>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<span className=\"flex-row hpx50\" style={{zIndex:1, position:\"absolute\", top:50, left:0, right:0, backgroundColor:\"#f8f9fa\"}}>\n\t\t\t\t\t<span className=\"flex-column col-12 col-sm-6 justify-content-center\">\n\t\t\t\t\t\t<p>Press the spacebar to generate a color scheme</p>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"flex-column col-12 col-sm-6 justify-content-center\">\n\t\t\t\t\t\t<ul className=\"flex-row justify-content-end\">\n\t\t\t\t\t\t\t<Link \n\t\t\t\t\t\t\tto={`pdf/${getColorScheme()}`} \n\t\t\t\t\t\t\ttarget=\"_blank\"><li className=\"pxxs\">Export pdf</li></Link>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t\t<Grid gridContainerStyle={{maxWidth:\"100%\", height:\"100vh\"}}>\n\t\t\t\t\t{this.props.randomColors.map((item, index) => \n\t\t\t\t\t\t<span key={index} style={{width:\"20%\", height:\"100%\", padding:0}}>\n\t\t\t\t\t\t\t<div className=\"card hoverable flex-column align-items-center justify-content-center\"\n\t\t\t\t\t\t\t onClick={() => this.itemSelectedHandler(item.hex)} \n\t\t\t\t\t\t\tstyle={{backgroundColor:item.hex ? item.hex:null, \n\t\t\t\t\t\t\t\twidth:\"100%\", height:\"100%\", borderRadius:0}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{colorSelected(item.hex) !== undefined && <IoIosCheckmarkCircleOutline \n\t\t\t\t\t\t\tstyle={{position:\"absolute\", top:100, right:10}} size={20} color=\"black\"/>}\n\t\t\t\t\t\t\t<span style={{width:\"100%\", height:100}}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<p style={{paddingBottom:20, textAlign:\"center\", fontFamily:\"Montserrat\", fontSize:24, \n\t\t\t\t\t\t\tcolor:\"rgba(0,0,0,.5)\"}}>{item.hex}</p>\n\t\t\t\t\t\t\t<p style={{textAlign:\"center\", fontFamily:\"Montserrat\", fontSize:20, color:\"rgba(0,0,0,.5)\"}}>{item.name}</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisLoading:state.ui.isLoading,\n\t\tinitialColors:state.data.initialColors,\n\t\tselectedColors:state.data.selectedColors,\n\t\trandomColors:state.data.randomColors\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonSetKey: (key, value) => dispatch(setKey(key, value)),\n\t\tonSetData: (key, value) => dispatch(setData(key, value))\n\t}\n} \n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(ExploreScreen);","import {\n\tSET_KEY\n} from './actions';\n\n\nexport const setKey = (key, value) => {\n\treturn {\n\t\ttype:SET_KEY,\n\t\tkey:key,\n\t\tvalue:value\n\t}\n}","import {\n\tSET_DATA\n} from './actions';\n\nexport const setData = (key, value) => {\n\treturn {\n\t\ttype:SET_DATA,\n\t\tkey:key,\n\t\tvalue:value\n\t}\n}","import React from \"react\";\nimport {\n  PDFViewer,\n  Document,\n  Page,\n  Text,\n  View\n} from \"@react-pdf/renderer\";\n\n//local storage uses api endpoint as key\nimport ENDPOINTS from '../../constants/api';\n\nconst PDFScreen = props => {\n  let rebuild_sheme_from_storage = () => {\n    let randomsWithHashTag =[]\n    let randomsWithOutHashTag = props.match.params.scheme.split(',')\n    randomsWithOutHashTag.forEach(item => {\n      randomsWithHashTag.push(\"#\"+item)\n    })\n\n    //return objects from local storage using hex, params only provide hex\n    let storedSchemeObjsList = localStorage.getItem(ENDPOINTS.BASE)\n    let schemeObjsPDFList =[]\n    let schemeObj ={}\n\n    if(storedSchemeObjsList !==null){\n      //parse list \n      storedSchemeObjsList = JSON.parse(storedSchemeObjsList)\n      randomsWithHashTag.forEach(hex => {\n        schemeObj = storedSchemeObjsList.find(obj => {\n          return obj.hex === hex\n        })\n\n        schemeObjsPDFList.push(schemeObj)\n      })\n    }\n\n    return schemeObjsPDFList\n  }\n\n  return(\n    <div className=\"container-fluid no-gutters align-items-center\">\n      <PDFViewer className=\"container-fluid no-gutters\">\n        <Document>\n          <Page orientation=\"landscape\" className=\"container-fluid\" style={{padding:80}}>\n           <View style={{flexGrow:1, flexDirection:\"row\"}}>\n            {\n              rebuild_sheme_from_storage().map(item => \n                <View style={{flex:1, height:400, padding:4}}>\n                <View style={{backgroundColor:item.hex, width:\"100%\", height:\"100%\", justifyContent:\"center\"}}>\n                  <View style={{height:100}}>\n                   <Text style={{textAlign:\"center\", fontSize:16, color:\"rgba(0,0,0,.5)\"}}>{item.hex}</Text>\n                    <Text style={{textAlign:\"center\", fontSize:16, color:\"rgba(0,0,0,.25)\"}}>{item.name}</Text>\n                  </View>\n                </View>\n                </View>\n              )\n            }\n            </View>\n          </Page>\n        </Document>\n      </PDFViewer>\n    </div>\n  )\n}\n\nexport default PDFScreen;\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ROUTES from './constants/routes';\nimport ExploreScreen from './screens/Explore/Explore';\nimport PDFScreen from './screens/PDF/PDF';\n\nconst NavBar = props => {\n\treturn(\n\t\t<nav className=\"main hpx50\" style={{backgroundColor:\"#f8f9fa\"}}>\n\t\t\t<a href={ROUTES.PROJECT_HOME} className=\"brand off-white\"\n\t\t\tstyle={{color:\"#333333\"}}>Palette</a>\n\t\t</nav>\n\t)\n}\nconst AppLayout = props => {\n\treturn(\n\t\t<div className=\"container-fluid no-gutters\" style={{height:\"100vh\"}}>\n\t\t\t{props.navBar ? React.createElement(props.navBar) : null}\n            {props.children}\n\t\t</div>\n\t)\n}\n\nconst AppRoute = ({ component, ...routeProps }) => {\n\treturn(\n\t\t<Route {...routeProps} render={(props) => {\n            return (\n                <AppLayout { ...props} {...routeProps}>\n                    {React.createElement(component, props)}\n                </AppLayout>\n            );\n        }} />\n\t)\n}\n\nconst App = appProps => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<AppRoute path={ROUTES.PROJECT_HOME} navBar={NavBar} component={ExploreScreen} {...appProps} />\n\t\t\t<AppRoute path=\"/pdf/:scheme\" component={PDFScreen} {...appProps} />\n\t\t</Switch>\n\t</Router>\n)\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<App />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}